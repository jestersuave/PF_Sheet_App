/* Global Resets and Body Styling */
body {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 13px; /* Slightly smaller font for density */
  line-height: 1.4;
  margin: 20px;
  background-color: #e0e0e0; /* Neutral background */
  color: #333;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Sheet Container */
#sheet-container {
  max-width: 1000px;
  margin: 0 auto;
  background-color: #fff;
  padding: 20px;
  border: 1px solid #555;
  box-shadow: 3px 3px 8px rgba(0,0,0,0.2);
}

/* Headings */
h2 {
  font-size: 1.4em;
  color: #444;
  border-bottom: 2px solid #666;
  padding-bottom: 4px;
  margin-bottom: 10px;
  margin-top: 10px; /* Space before a new section */
}

#charInfo h2 {
  margin-top: 0; /* No top margin for the very first heading */
}

/* Character Info Section */
#charInfo {
  padding-bottom: 15px;
  margin-bottom: 15px;
  border-bottom: 1px solid #ccc;
  display: flex;
  flex-wrap: wrap; /* Allow items to wrap */
  gap: 10px 20px; /* Row and column gap */
  align-items: center;
}

#charInfo > div {
  display: flex;
  align-items: center;
  margin-bottom: 0; /* Handled by gap */
  padding: 0; /* Remove default padding */
  border-bottom: none; /* Remove default border */
}

#charInfo label {
  min-width: auto; /* Override previous min-width */
  margin-right: 5px;
  font-weight: bold;
}

#charInfo input[type="text"],
#charInfo input[type="number"] {
  width: 150px; /* Adjust as needed */
  padding: 5px;
}
#charInfo input#charLevel {
  width: 60px;
}


/* Main Content Area - Flexbox for Columns */
#main-content {
  display: flex;
  gap: 20px; /* Space between columns */
}

#main-left-column {
  flex: 2; /* Left column takes up less space, e.g., 40% */
  display: flex;
  flex-direction: column;
  gap: 15px; /* Space between sections in this column */
}

#main-right-column {
  flex: 3; /* Right column takes up more space, e.g., 60% */
  display: flex;
  flex-direction: column;
  gap: 15px; /* Space between sections in this column */
}

/* Common styling for sections within columns */
#abilityScores,
#skills,
#combatStats,
#savingThrows {
  border: 1px solid #aaa;
  padding: 10px;
  border-radius: 3px; /* Subtle rounding */
}

/* Styling for individual items within sections (label, input, span) */
#abilityScores > div,
/* #skills > div, */ /* Will be styled separately for compactness */
#combatStats > div,
#savingThrows > div,
#skills > div { /* Apply common flex properties but override specifics below */
  display: flex;
  align-items: center;
  margin-bottom: 6px; /* Space between rows */
  padding: 4px;
  border-bottom: 1px solid #eee; /* Light separator for rows */
}

#skills > div {
  display: flex;
  align-items: center;
  /* flex-wrap: nowrap; */ /* Allow skill items to wrap if they become too long - CHANGED */
  flex-wrap: wrap;
  margin-bottom: 4px; /* Reduced space between skill rows */
  padding: 2px 0; /* Reduced padding, only top/bottom */
  border-bottom: 1px solid #eee; /* Light separator for rows */
}

#abilityScores > div:last-child,
#skills > div:last-child,
#combatStats > div:last-child,
#savingThrows > div:last-child {
  border-bottom: none; /* No border for the last item in a section */
}

label {
  margin-right: 8px;
  font-weight: normal; /* Less emphasis than charInfo labels */
  min-width: 120px; /* Default alignment for labels in sections */
  display: inline-block;
  flex-shrink: 0; /* Prevent labels from shrinking */
}

input[type="text"],
input[type="number"] {
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 3px;
  width: 60px; /* Default compact width */
  margin-right: 5px; /* Space before any following span */
}

span { /* General spans, often used for "Modifier:" or "Total:" text */
  margin-left: 0; /* Reset from previous styles */
}

/* Specific span styling for calculated values */
[id$="Mod"], /* e.g., strMod, dexMod */
[id$="Total"] /* e.g., acrobaticsTotal, hpTotal */ {
  font-weight: bold;
  min-width: 20px; /* Ensure space for the number */
  display: inline-block; /* Allow min-width */
  text-align: right;
  margin-left: 5px; /* Space before the value */
}

/* Specific Section Adjustments */

/* Ability Scores */
#abilityScores label { min-width: 90px; }
#abilityScores input[type="number"] { width: 50px; }

/* Skills */
#skills label {
  min-width: 170px; /* Skills often have longer names - Compacted */
  margin-right: 4px; /* Reduced space after main skill label */
}
#skills input[type="number"] { width: 50px; } /* This is general, skill-rank-input is more specific */

/* Combat Stats */
#combatStats label { min-width: 150px; }
#combatStats input[type="number"] { width: 60px; }
#combatStats > div > span:not([id$="Total"]) { /* "Total AC:", "Melee Attack:" etc. */
    font-weight: bold;
    min-width: 150px; /* Align the descriptive spans */
}

/* Saving Throws */
#savingThrows label { min-width: 140px; }
#savingThrows input[type="number"] { width: 50px; }


/* Ensure consistent look for calculated value holders */
#strMod, #dexMod, #conMod, #intMod, #wisMod, #chaMod,
#acrobaticsTotal, #appraiseTotal, #bluffTotal, #climbTotal, #craftTotal, #diplomacyTotal,
#disableDeviceTotal, #disguiseTotal, #escapeArtistTotal, #flyTotal, #handleAnimalTotal,
#healTotal, #intimidateTotal, #knowledgeArcanaTotal, #knowledgeDungeoneeringTotal,
#knowledgeEngineeringTotal, #knowledgeGeographyTotal, #knowledgeHistoryTotal,
#knowledgeLocalTotal, #knowledgeNatureTotal, #knowledgeNobilityTotal, #knowledgePlanesTotal,
#knowledgeReligionTotal, #linguisticsTotal, #perceptionTotal, #performTotal, #professionTotal,
#rideTotal, #senseMotiveTotal, #sleightOfHandTotal, #spellcraftTotal, #stealthTotal,
#survivalTotal, #swimTotal, #useMagicDeviceTotal,
#hpTotal, #acTotal, #meleeAttack, #rangedAttack, #cmbTotal, #cmdTotal, #initiativeTotal,
#fortTotal, #refTotal, #willTotal {
  color: #003366; /* Dark blue for calculated values */
  padding: 2px 4px;
  background-color: #f0f0f0; /* Light background for emphasis */
  border-radius: 2px;
  text-align: center; /* Center the number in its box */
}

#hpTotal, #acTotal {
    min-width: 30px; /* Slightly wider for potentially larger numbers */
}

/* Custom Dice Rolls Section */
#customRollsSection {
  border: 1px solid #aaa;
  padding: 10px;
  border-radius: 3px; /* Subtle rounding */
  margin-top: 15px; /* Space from the skills section */
}

#addCustomRollBtn {
  font-size: 1.2em; /* Make '+' clearly visible */
  padding: 5px 10px;
  margin-bottom: 10px; /* Space before the form container */
  cursor: pointer;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 3px;
}

#addCustomRollBtn:hover {
  background-color: #e0e0e0;
}

#customRollFormContainer .custom-roll-form { /* Class for individual forms */
  border: 1px solid #ccc;
  padding: 10px;
  margin-bottom: 10px;
  background-color: #f9f9f9;
  border-radius: 3px;
}

.custom-roll-form div { /* For layout of label/input pairs */
  margin-bottom: 8px;
  display: flex;
  align-items: center;
}

.custom-roll-form label {
  min-width: 100px; /* Adjust as needed */
  margin-right: 5px;
}

.custom-roll-form input[type="number"] {
  width: 50px; /* Compact size for dice counts */
  margin-right: 10px; /* Space between dice inputs */
}

.custom-roll-form input[type="text"] { /* For description */
  flex-grow: 1; /* Allow description to take available space */
  padding: 5px;
}

.custom-roll-form button { /* Save button for the form */
  padding: 6px 12px;
  background-color: #4CAF50; /* Green for save */
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  margin-top: 5px;
}

.custom-roll-form button:hover {
  background-color: #45a049;
}

#customRollsDisplayContainer .displayed-roll { /* Class for individual displayed rolls */
  border: 1px solid #ddd;
  padding: 8px;
  margin-bottom: 8px;
  background-color: #fff;
  border-radius: 3px;
  display: flex;
  justify-content: space-between; /* For description and dice string */
  align-items: center;
}

.displayed-roll .roll-description {
  font-weight: bold;
  margin-right: 10px;
}

.displayed-roll .roll-dice-summary {
  font-family: monospace; /* Good for dice strings like 2d6+1d4 */
  font-size: 0.95em;
}

/* Bonuses Section */
#bonusesSection {
  border: 1px solid #aaa;
  padding: 10px;
  border-radius: 3px; /* Subtle rounding */
  margin-top: 15px; /* Space from the previous section */
}

#addBonusBtn {
  font-size: 1.2em; /* Make '+' clearly visible */
  padding: 5px 10px;
  margin-bottom: 10px; /* Space before the form container */
  cursor: pointer;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 3px;
}

#addBonusBtn:hover {
  background-color: #e0e0e0;
}

#bonusFormContainer .bonus-form { /* Class for individual bonus forms */
  border: 1px solid #ccc;
  padding: 10px;
  margin-bottom: 10px;
  background-color: #f9f9f9;
  border-radius: 3px;
}

.bonus-form div { /* For layout of label/input pairs within the bonus form */
  margin-bottom: 8px;
  /* display: flex; Consider flex for more complex alignment if needed */
  /* align-items: center; */
}

.bonus-form label {
  min-width: 120px; /* Adjust as needed */
  margin-right: 5px;
  display: block; /* Make labels take their own line for now */
  margin-bottom: 3px; /* Space between label and its control */
}

.bonus-form select,
.bonus-form textarea,
.bonus-form input[type="text"] { /* Assuming a text input might be used, though not in current plan */
  width: 100%; /* Make them take full width of their container */
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

.bonus-form input#bonusValue_temp {
  width: 70px;
  padding: 5px; /* Match other inputs */
  /* margin-left: 5px; /* Only if label is inline and needs space */
}

.bonus-form .checkbox-group label {
    min-width: unset; /* Override default for checkbox labels */
    display: inline-block; /* Keep checkbox and label on same line */
    margin-right: 10px;
    font-weight: normal;
}
.bonus-form .checkbox-group input[type="checkbox"] {
    width: auto; /* Checkboxes should not be full width */
    margin-right: 5px;
}


.bonus-form textarea {
  min-height: 60px; /* Decent starting height for description */
  resize: vertical; /* Allow vertical resizing */
}

.bonus-form button { /* Save/Cancel buttons for the bonus form */
  padding: 6px 12px;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  margin-top: 5px;
  margin-right: 5px; /* Space between buttons */
}

.bonus-form button.save-bonus-btn {
  background-color: #4CAF50; /* Green for save */
}
.bonus-form button.save-bonus-btn:hover {
  background-color: #45a049;
}

.bonus-form button.cancel-bonus-btn {
  background-color: #f44336; /* Red for cancel */
}
.bonus-form button.cancel-bonus-btn:hover {
  background-color: #da190b;
}

#bonusesDisplayContainer .displayed-bonus { /* Class for individual displayed bonuses */
  border: 1px solid #ddd;
  padding: 8px;
  margin-bottom: 8px;
  background-color: #fff;
  border-radius: 3px;
}

.displayed-bonus .bonus-summary {
  font-weight: bold;
  margin-bottom: 4px;
}

.displayed-bonus .bonus-applies-to {
  font-style: italic;
  color: #555;
  margin-bottom: 4px;
}

.displayed-bonus .bonus-description {
  font-size: 0.9em;
  color: #333;
  margin-bottom: 5px;
}

.displayed-bonus button.delete-bonus-btn {
  padding: 3px 8px;
  background-color: #dc3545; /* Red color for delete */
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  font-size: 0.85em;
  float: right; /* Position delete button to the right */
}
.displayed-bonus button.delete-bonus-btn:hover {
  background-color: #c82333;
}

/* Clearfix for displayed-bonus if using float */
#bonusesDisplayContainer .displayed-bonus::after {
  content: "";
  clear: both;
  display: table;
}
/* feature/bonuses-section */

/* Skill Section Enhancements for Class Skills */

.class-skill-text-display {
  font-size: 0.8em; /* Smaller font */
  color: #006400; /* Dark green color */
  margin-left: 8px; /* Space after the total */
  font-style: italic;
  vertical-align: middle; /* Align with other text on the line */
}

.class-skill-checkbox-label {
  font-size: 0.9em;
  margin-left: 4px; /* Space before "CS" label (after main skill name label) - Compacted */
  margin-right: 0; /* No space needed if checkbox is immediately after */
  cursor: pointer;
  vertical-align: middle;
  min-width: auto; /* Override general label min-width */
  /* display: inline-flex; align-items: center; /* Optional for precise vertical centering with text */
}

.class-skill-checkbox {
  margin-left: 3px; /* Space after "CS" label and before checkbox */
  margin-right: 3px; /* Space after checkbox before rank input or "Total:" span - Compacted */
  vertical-align: middle; /* Align checkbox with text */
  cursor: pointer;
  flex-shrink: 0; /* Prevent checkbox from shrinking if skill name is long */
}

input.skill-rank-input {
  width: 40px; /* Make skill rank inputs a bit smaller */
  /* padding, border are inherited from input[type="number"] */
  margin-right: 4px; /* Compacted space after rank input */
  flex-shrink: 0; /* Prevent rank input from shrinking */
}

/* #skills > div is already display: flex; align-items: center; flex-wrap: nowrap; */
/* The main skill label (#skills label) already has flex-shrink: 0; */
/* The total span (e.g. <span>Total: <span id="acrobaticsTotal">0</span></span>) might need flex-shrink: 0 if things get too crowded */
#skills > div > span { /* Targeting the "Total: ..." span container */
    flex-shrink: 0; /* Prevent "Total: X" from shrinking */
    margin-left: auto; /* Push total to the right, utilizing flex space */
}

/* --- Roll Button Styles --- */
.roll-skill-btn,
.roll-stat-btn,
.roll-custom-btn,
.roll-save-btn { /* Added new class */
  padding: 3px 8px;
  font-size: 0.85em;
  margin-left: 8px;
  border: 1px solid #ccc;
  border-radius: 4px; /* Slightly more rounded */
  background-color: #e9e9e9; /* Lighter grey for differentiation */
  color: #333;
  cursor: pointer;
  vertical-align: middle;
  line-height: 1; /* Ensure text is centered well if padding is uneven */
  transition: background-color 0.15s ease-in-out; /* Smooth transition for hover */
}

.roll-skill-btn:hover,
.roll-stat-btn:hover,
.roll-custom-btn:hover,
.roll-save-btn:hover { /* Added new class */
  background-color: #d5d5d5;
}

/* Note: .roll-custom-btn specific styles (like its green background) are applied inline in JS for now.
   If those were to be moved to CSS, they would override parts of the above. */

/* --- Dark Mode Styles --- */
body.dark-mode {
  background-color: #000033; /* Dark navy blue */
  color: #e0e0e0; /* Light grey for text */
}

body.dark-mode #sheet-container {
  background-color: #0a0a3a; /* Slightly lighter navy/dark grey */
  border-color: #444;
  box-shadow: 3px 3px 8px rgba(0,0,0,0.5); /* Darker shadow */
}

body.dark-mode h2 {
  color: #c0c0ff; /* Light blue/purple for headings */
  border-bottom-color: #555;
}

body.dark-mode input[type="text"],
body.dark-mode input[type="number"],
body.dark-mode textarea,
body.dark-mode select {
  background-color: #1a1a4a; /* Darker input background */
  color: #e0e0e0; /* Light text for inputs */
  border-color: #555; /* Darker border for inputs */
}

/* Ensure placeholder text in dark mode is visible */
body.dark-mode input[type="text"]::placeholder,
body.dark-mode textarea::placeholder {
  color: #aaa;
}


body.dark-mode button,
body.dark-mode #addCustomRollBtn, /* Specific ID for an add button */
body.dark-mode #addBonusBtn {      /* Specific ID for an add button */
  background-color: #2a2a5a;
  color: #e0e0e0;
  border-color: #555;
}
body.dark-mode button:hover,
body.dark-mode #addCustomRollBtn:hover,
body.dark-mode #addBonusBtn:hover {
  background-color: #3a3a6a; /* Slightly lighter on hover */
}

/* Specific button styling for dark mode */
body.dark-mode .custom-roll-form button.save-roll-btn,
body.dark-mode .bonus-form button.save-bonus-btn {
  background-color: #005000; /* Darker green */
  color: #e0e0e0;
}
body.dark-mode .custom-roll-form button.save-roll-btn:hover,
body.dark-mode .bonus-form button.save-bonus-btn:hover {
  background-color: #007000; /* Lighter green on hover */
}

body.dark-mode .custom-roll-form button.cancel-roll-btn,
body.dark-mode .bonus-form button.cancel-bonus-btn,
body.dark-mode .displayed-bonus button.delete-bonus-btn,
body.dark-mode #customRollsDisplayContainer .displayed-roll button { /* General delete for custom rolls */
  background-color: #800000; /* Darker red */
  color: #e0e0e0;
}
body.dark-mode .custom-roll-form button.cancel-roll-btn:hover,
body.dark-mode .bonus-form button.cancel-bonus-btn:hover,
body.dark-mode .displayed-bonus button.delete-bonus-btn:hover,
body.dark-mode #customRollsDisplayContainer .displayed-roll button:hover {
  background-color: #a00000; /* Lighter red on hover */
}

/* Dark Mode Roll Button Styles (These are more specific than general dark mode button) */
body.dark-mode .roll-skill-btn,
body.dark-mode .roll-stat-btn,
body.dark-mode .roll-custom-btn,
body.dark-mode .roll-save-btn { /* Added new class */
  background-color: #2c2c60;
  color: #d0d0d0;
  border-color: #505070;
}

body.dark-mode .roll-skill-btn:hover,
body.dark-mode .roll-stat-btn:hover,
body.dark-mode .roll-custom-btn:hover,
body.dark-mode .roll-save-btn:hover { /* Added new class */
  background-color: #3a3a7a;
}
/* Ensure custom roll button (green in light mode) gets dark mode override if not handled by general button */
body.dark-mode .roll-custom-btn { /* This selector is the same as above, so it's fine */
    background-color: #1d6a2a; /* Darker green for dark mode */
    border-color: #28502f;
}
body.dark-mode .roll-custom-btn:hover {
    background-color: #278838; /* Slightly lighter green for hover in dark mode */
}

/* --- Webhook Configuration Styles --- */
#webhookConfigSection {
  border: 1px solid #aaa;
  padding: 10px;
  border-radius: 3px;
  margin-top: 15px; /* Space from previous section */
}

#webhookConfigSection h2 { /* Uses existing h2 styles, but you can override if needed */
  margin-top: 0; /* No top margin if it's the first element in its own section */
}

#webhookConfigSection > div { /* The div containing label, input, and button */
  display: flex;
  align-items: center;
  gap: 10px; /* Space between label, input, and button */
  margin-bottom: 5px; /* Space before the status message */
}

#webhookConfigSection label {
  min-width: auto; /* Override default label min-width if too large */
  font-weight: bold;
  flex-shrink: 0;
}

#webhookConfigSection input[type="text"] {
  flex-grow: 1; /* Allow input to take available space */
  padding: 6px; /* Consistent padding */
  /* width is handled by flex-grow, but set a min-width if desired */
  min-width: 200px;
}

#webhookConfigSection button {
  padding: 6px 12px;
  background-color: #4CAF50; /* Green for save, consistent with other save buttons */
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  flex-shrink: 0;
}

#webhookConfigSection button:hover {
  background-color: #45a049;
}

.webhook-status-message {
    color: #333; /* Default text color */
    min-height: 1.2em; /* Reserve space even if empty */
}


/* Dark Mode Webhook Configuration Styles */
body.dark-mode #webhookConfigSection {
  border-color: #444;
  background-color: #101040; /* Dark background for sections */
}

body.dark-mode #webhookConfigSection label {
  color: #d0d0d0;
}

body.dark-mode #webhookConfigSection input[type="text"] {
  background-color: #1a1a4a;
  color: #e0e0e0;
  border-color: #555;
}

body.dark-mode #webhookConfigSection input[type="text"]::placeholder {
  color: #aaa;
}

body.dark-mode #webhookConfigSection button {
  background-color: #005000; /* Darker green */
  color: #e0e0e0;
  border-color: #555; /* Though current buttons are borderless */
}

body.dark-mode #webhookConfigSection button:hover {
  background-color: #007000; /* Lighter green on hover */
}

body.dark-mode .webhook-status-message {
    color: #ccc; /* Lighter text for status message */
}

body.dark-mode #abilityScores,
body.dark-mode #skills,
body.dark-mode #combatStats,
body.dark-mode #savingThrows,
body.dark-mode #customRollsSection,
body.dark-mode #bonusesSection {
  border-color: #444;
  background-color: #101040; /* Dark background for sections */
}

body.dark-mode #customRollFormContainer .custom-roll-form,
body.dark-mode #bonusFormContainer .bonus-form {
  background-color: #181848; /* Slightly lighter for forms within sections */
  border-color: #444;
}

/* Row separators in dark mode */
body.dark-mode #abilityScores > div,
body.dark-mode #skills > div,
body.dark-mode #combatStats > div,
body.dark-mode #savingThrows > div {
  border-bottom-color: #333; /* Darker separator */
}
/* Remove border for last child still applies */
body.dark-mode #abilityScores > div:last-child,
body.dark-mode #skills > div:last-child,
body.dark-mode #combatStats > div:last-child,
body.dark-mode #savingThrows > div:last-child {
  border-bottom: none;
}


body.dark-mode [id$="Mod"],
body.dark-mode [id$="Total"] {
  color: #87cefa; /* Light sky blue for calculated values */
  background-color: #202050; /* Dark blue/purple background for these values */
  border-radius: 2px; /* Keep border radius consistent */
}

body.dark-mode #customRollsDisplayContainer .displayed-roll,
body.dark-mode #bonusesDisplayContainer .displayed-bonus {
  background-color: #181848; /* Background for displayed items */
  border-color: #444; /* Border for displayed items */
}

body.dark-mode label {
  color: #d0d0d0; /* Lighter color for labels */
}
body.dark-mode #charInfo label { /* charInfo labels are bold */
  color: #e0e0e0;
}
body.dark-mode .class-skill-checkbox-label {
  color: #c0c0c0; /* Specific adjustment if needed for CS label */
}

body.dark-mode .class-skill-text-display {
  color: #7fdd7f; /* Light green for "Class Skill" text */
}

/* Adjustments for specific spans if needed */
body.dark-mode span { /* General spans */
  /* color: #e0e0e0; */ /* Already covered by body.dark-mode */
}

body.dark-mode #combatStats > div > span:not([id$="Total"]) { /* "Total AC:", "Melee Attack:" etc. */
    font-weight: bold; /* Keep bold */
    /* color: #c0c0ff; */ /* Inherits or use a specific light color */
}

body.dark-mode .displayed-bonus .bonus-applies-to {
  color: #aaa; /* Lighter italic text */
}

body.dark-mode .displayed-bonus .bonus-description {
  color: #ccc; /* Lighter description text */
}

/* Theme toggle button itself in dark mode - optional if general button styles are enough */
body.dark-mode #themeToggleBtn {
  background-color: #000033; /* Darker, like body */
  color: #c0c0ff; /* Contrasting text */
  border: 1px solid #c0c0ff; /* Contrasting border */
}
body.dark-mode #themeToggleBtn:hover {
  background-color: #1a1a4a;
}

/* Link color in dark mode if any links exist or are added */
body.dark-mode a {
  color: #9dbdff;
}
body.dark-mode a:hover {
  color: #b8ceff;
}

/* --- Modal Styles --- */
.modal-hidden {
  display: none;
}

.modal-visible {
  display: flex; /* Use flex to center content */
  position: fixed; /* Stay in place */
  z-index: 1000; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgba(0,0,0,0.6); /* Black w/ opacity for overlay */
  align-items: center; /* Vertical center */
  justify-content: center; /* Horizontal center */
}

.modal-content {
  background-color: #fefefe;
  margin: auto; /* Auto margins for centering, though flex handles it */
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
  max-width: 500px; /* Max width for the modal */
  border-radius: 5px;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
  position: relative; /* For positioning the close button */
}

.modal-close-btn {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.modal-close-btn:hover,
.modal-close-btn:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}

#modalTitle {
  margin-top: 0;
  margin-bottom: 15px;
  text-align: center;
}

#modalResultText {
  font-size: 1.8em; /* Large font for result, adjusted from 2em for balance */
  text-align: center;
  word-wrap: break-word; /* Ensure long descriptions wrap */
}

/* Dark Mode Modal Styles */
body.dark-mode .modal-content {
  background-color: #1a1a4a; /* Dark background for modal content */
  color: #e0e0e0; /* Light text */
  border-color: #555; /* Darker border */
}

body.dark-mode .modal-close-btn {
  color: #ccc; /* Lighter close button for dark mode */
}

body.dark-mode .modal-close-btn:hover,
body.dark-mode .modal-close-btn:focus {
  color: #fff; /* White hover/focus for close button */
}

body.dark-mode #modalTitle {
   color: #c0c0ff; /* Matching h2 in dark mode */
}
/* modalResultText color will be inherited from .modal-content */

/* Styling for the container of stat selection dropdowns */
.stat-dropdown-container {
  display: flex;
  align-items: center;
  margin-top: 4px; /* Add some space above the dropdown */
  margin-bottom: 4px; /* Add some space below the dropdown */
  flex-wrap: wrap; /* Allow wrapping if space is tight */
  /* position: relative; /* This will be on .custom-stat-dropdown if needed */
}

.stat-dropdown-container label { /* This is the label like "Based on:" */
  min-width: 70px;
  margin-right: 5px;
  font-size: 0.9em;
  flex-shrink: 0; /* Prevent this label from shrinking */
}

/* Old .stat-select-dropdown style for <select multiple> - REMOVE OR COMMENT OUT */
/*
.stat-select-dropdown {
  flex-grow: 1;
  padding: 4px;
  border: 1px solid #ccc;
  border-radius: 3px;
  min-width: 150px;
  max-width: 100%;
  height: 60px;
}
*/

/* NEW STYLES FOR CUSTOM CHECKBOX DROPDOWN */
.custom-stat-dropdown {
  position: relative; /* For positioning the absolute dropdown options */
  /* .stat-dropdown-container already provides flex and alignment */
}

.stat-select-button {
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 3px;
  padding: 5px 8px;
  text-align: left;
  cursor: pointer;
  width: 150px; /* Default width, can be overridden by specific sections */
  font-size: 0.9em;
  color: #333;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex-grow: 1; /* Allow button to take available space in flex container */
}

.stat-select-button:hover {
  border-color: #aaa;
}

.stat-select-button:focus {
  outline: 1px solid #88b3ff; /* Basic focus indicator */
}

.stat-select-dropdown-options {
  display: none; /* Initially hidden, JS will toggle */
  position: absolute;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 3px;
  z-index: 100; /* Ensure it's above other elements */
  max-height: 200px; /* Limit height and allow scrolling */
  overflow-y: auto;
  padding: 5px;
  margin-top: 2px; /* Small space below the button */
  min-width: 160px; /* Ensure it's at least as wide as the button */
  box-shadow: 0 2px 5px rgba(0,0,0,0.15);
  width: 100%; /* Default to full width of its relative parent (.custom-stat-dropdown) */
}

.stat-select-dropdown-options label { /* Labels for checkboxes */
  display: block;
  padding: 4px 8px;
  font-weight: normal;
  cursor: pointer;
  margin-bottom: 2px;
  min-width: unset;
  font-size: 0.9em;
  white-space: nowrap; /* Prevent checkbox labels from wrapping */
}

.stat-select-dropdown-options label:hover {
  background-color: #f0f0f0;
}

.stat-select-dropdown-options input[type="checkbox"] {
  margin-right: 8px;
  vertical-align: middle;
}


/* Adjustments for skills section to accommodate dropdowns */
#skills .stat-dropdown-container { /* This is the parent flex container */
  width: 100%;
  margin-left: 0;
}

#skills .stat-dropdown-container label { /* "Based on:" label */
  min-width: 60px;
}

#skills .stat-select-button {
    width: 100%; /* Make button take full width of its container */
    margin-top: 2px;
}
#skills .stat-select-dropdown-options {
    width: 100%; /* Match button width */
    /* Position it relative to the .custom-stat-dropdown which is inside .stat-dropdown-container */
}

/* Saving Throws, Combat Stats - Dropdown layout */
#savingThrows .stat-dropdown-container, /* Parent flex container */
#combatStats .stat-dropdown-container {
   width: 100%;
   margin-left: 0;
}

#savingThrows .stat-dropdown-container label, /* "Based on:" label */
#combatStats .stat-dropdown-container label {
  min-width: 75px;
}

#savingThrows .stat-select-button,
#combatStats .stat-select-button {
    /* Default width: 150px from .stat-select-button or flex-grow:1 will apply */
    /* If .stat-dropdown-container is also .custom-stat-dropdown, button will grow */
}
#savingThrows .stat-select-dropdown-options,
#combatStats .stat-select-dropdown-options {
    /* min-width ensures it's at least as wide as the button */
    /* width: 100%; /* to match the container if .custom-stat-dropdown is full width */
}


/* Dark Mode for Custom Stat Select Dropdowns */
body.dark-mode .stat-select-button {
  background-color: #1a1a4a;
  color: #e0e0e0;
  border-color: #555;
}

body.dark-mode .stat-select-button:hover {
  border-color: #777;
}

body.dark-mode .stat-select-button:focus {
  outline: 1px solid #588bcf;
}

body.dark-mode .stat-select-dropdown-options {
  background-color: #202050; /* Slightly different from button for depth */
  border-color: #555;
  box-shadow: 0 2px 5px rgba(0,0,0,0.3);
}

body.dark-mode .stat-select-dropdown-options label {
  color: #e0e0e0;
}

body.dark-mode .stat-select-dropdown-options label:hover {
  background-color: #2a2a5a;
}

body.dark-mode .stat-select-dropdown-options input[type="checkbox"] {
  accent-color: #588bcf;
}

/* Ensure old dark mode for .stat-select-dropdown (if any) is removed or commented */
/*
body.dark-mode .stat-select-dropdown {
  background-color: #1a1a4a;
  color: #e0e0e0;
  border-color: #555;
}
*/

/* === Bonus Form "Applies To" Dropdown Specific Styles === */

/* Ensure the bonus form can act as a positioning context */
#bonusFormContainer .bonus-form {
    position: relative;
}

/* The div containing the "Applies To:" label and the button */
/* This assumes the div structure from script.js: <div><label.../><button.../></div> */
/* To make label and button align nicely, this parent div needs to be flex */
#bonusFormContainer .bonus-form > div:has(> #bonusAppliesToBtn_temp) {
    display: flex;
    align-items: center;
}
#bonusFormContainer .bonus-form > div:has(> #bonusAppliesToBtn_temp) > label {
    min-width: 120px; /* From .bonus-form label */
    margin-bottom: 0; /* Override .bonus-form label margin-bottom */
}


/* Styling for the "Applies To" dropdown options within the bonus form */
#bonusFormContainer #bonusAppliesToOptions_temp {
  /* .stat-select-dropdown-options provides most base styles (position, z-index, etc.) */
  /* The inline style width: 100% was applied in JS. Override if needed or make more specific. */
  /* Let's make it behave more like other dropdowns and not necessarily full form width */
  width: auto; /* Override inline 100% if it's too wide */
  min-width: 250px; /* Ensure it's wide enough for typical target names */
  max-width: 350px; /* But not excessively wide */
  left: 0; /* Align with the left of the .bonus-form container (due to .bonus-form being relative) */
  /* If the button is not at the very left of the form, this might need adjustment,
     e.g. left: (some offset) or dynamically position with JS (more complex)
     For now, assuming the button is close enough to the left or this alignment is acceptable.
     Given the label "Applies To:" is styled with display:block by default in .bonus-form,
     the button's div is on a new line. So left:0 for the options should align it under the label/button area.
  */
}

/* Ensure the button in the bonus form uses available space if its parent div is flex */
#bonusFormContainer #bonusAppliesToBtn_temp {
  /* .stat-select-button class already provides flex-grow: 1, padding, etc. */
  /* This should be sufficient if its parent div is display: flex */
}

/* Dark Mode adjustments for "Applies To" dropdown - should mostly inherit */
/* No specific overrides needed if .stat-select-button and .stat-select-dropdown-options dark styles are sufficient */



/* === Character Sheet Management Styles === */
#character-sheet-management {
  padding: 15px;
  border: 1px solid #bce8f1; /* Light blue border */
  background-color: #f1faff; /* Very light blue background */
  border-radius: 4px;
  margin-top: 15px;
}
#character-sheet-management h2, #character-sheet-management h3 {
    color: #31708f; /* Blueish text for headings */
    border-bottom-color: #bce8f1;
}
#character-sheet-management h3 {
    margin-top: 15px;
    font-size: 1.2em;
}


#character-sheet-management div { /* General divs inside for spacing */
  margin-bottom: 10px;
}
#character-sheet-management div:last-child {
    margin-bottom: 0;
}


#character-sheet-management label {
  margin-right: 5px;
  font-weight: bold;
  min-width: auto;
}

#sheet-name-input {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  width: 250px; /* Or flex-grow if in a flex container */
  margin-right: 10px;
}

#save-sheet-button, #load-sheet-button { /* Load sheet button is "Refresh List" */
  padding: 8px 15px;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

#save-sheet-button {
  background-color: #5cb85c; /* Green */
}
#save-sheet-button:hover {
  background-color: #4cae4c;
}

#load-sheet-button { /* "Refresh List" */
  background-color: #337ab7; /* Blue */
}
#load-sheet-button:hover {
  background-color: #286090;
}

#saved-sheets-list {
  border: 1px solid #ddd;
  background-color: #fff;
  padding: 10px;
  min-height: 50px;
  max-height: 200px;
  overflow-y: auto;
  border-radius: 4px;
}

.saved-sheet-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  border-bottom: 1px solid #eee;
}
.saved-sheet-item:last-child {
  border-bottom: none;
}

.saved-sheet-item span {
  flex-grow: 1;
}

.saved-sheet-item button { /* Load and Delete buttons within list items */
  padding: 5px 10px;
  font-size: 0.85em;
  margin-left: 5px;
  border-radius: 3px;
  border: 1px solid transparent;
}
.saved-sheet-item .load-sheet-btn {
  background-color: #5bc0de; /* Info blue */
  color: white;
  border-color: #46b8da;
}
.saved-sheet-item .load-sheet-btn:hover {
  background-color: #31b0d5;
  border-color: #269abc;
}

.saved-sheet-item .delete-sheet-btn {
  background-color: #d9534f; /* Danger red */
  color: white;
  border-color: #d43f3a;
}
.saved-sheet-item .delete-sheet-btn:hover {
  background-color: #c9302c;
  border-color: #ac2925;
}

/* === Dark Mode for New Elements === */


body.dark-mode #character-sheet-management {
  background-color: #101848; /* Dark blue, slightly different from other sections */
  border-color: #2c3e50;
}
body.dark-mode #character-sheet-management h2,
body.dark-mode #character-sheet-management h3 {
    color: #a0c0ff;
    border-bottom-color: #2c3e50;
}

body.dark-mode #sheet-name-input {
  background-color: #1a1a4a;
  color: #e0e0e0;
  border-color: #555;
}

body.dark-mode #save-sheet-button {
  background-color: #2a8a2a; /* Darker green */
}
body.dark-mode #save-sheet-button:hover {
  background-color: #206020;
}

body.dark-mode #load-sheet-button { /* "Refresh List" */
  background-color: #204d74; /* Darker blue */
}
body.dark-mode #load-sheet-button:hover {
  background-color: #122b40;
}

body.dark-mode #saved-sheets-list {
  background-color: #181848; /* Darker than the management section bg */
  border-color: #444;
}

body.dark-mode .saved-sheet-item {
  border-bottom-color: #333;
  color: #d0d0d0; /* Text color for sheet name */
}

body.dark-mode .saved-sheet-item .load-sheet-btn {
  background-color: #28a0c0;
  border-color: #1a80a0;
  color: #fff;
}
body.dark-mode .saved-sheet-item .load-sheet-btn:hover {
  background-color: #1a80a0;
  border-color: #106080;
}

body.dark-mode .saved-sheet-item .delete-sheet-btn {
  background-color: #a02020;
  border-color: #801010;
  color: #fff;
}
body.dark-mode .saved-sheet-item .delete-sheet-btn:hover {
  background-color: #801010;
  border-color: #600000;
}
